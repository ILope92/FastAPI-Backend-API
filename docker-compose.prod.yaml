version: '3'
services:
    nginx:
        container_name: nginx
        image: nginx:latest
        command: '/bin/sh -c ''while :; do sleep 336h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
        depends_on:
            - backend
            - pgadmin
        volumes:
            - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
        ports:
            - 80:80
            - 443:443
        networks:
            - db_network
    certbot:
        container_name: certbot
        entrypoint:  "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 118h & wait $${!}; done;'"
        image: certbot/certbot
        volumes:
            - ./docker/nginx/certbot/conf:/etc/letsencrypt
            - ./docker/nginx/certbot/www:/var/www/certbot
    
    backend:
        image: backend:latest-prod
        
        env_file:
            - .prod.env
        build:
            context: .
            dockerfile: backend.Dockerfile
        ports:
            - 8000
        depends_on:
            - db
        links:
            - db
        volumes:
            - ./app:/app
            - ./alembic:/alembic
        networks:
            - db_network
    db:
        image: postgres:12
        volumes:
            - ./docker/postgres/:/var/lib/postgresql/data/pgdata/db_files/
        env_file:
            - .prod.env
        ports: 
            - 5432:5432
        networks:
            - db_network

    pgadmin:
        image: dpage/pgadmin4
        ports:
            - 5055
        depends_on:
            - db
        env_file:
            - .prod.env
        networks:
            - db_network

networks:
  db_network:
    driver: bridge